<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>leetcode</title>
    <url>/2021/03/11/leetcode/</url>
    <content><![CDATA[<hr>
<p>Leetcode 刷题</p>
<hr>
<h1 id="双指针-一个遍历指针，一个指向最终结果的指针"><a href="#双指针-一个遍历指针，一个指向最终结果的指针" class="headerlink" title="双指针-一个遍历指针，一个指向最终结果的指针"></a>双指针-一个遍历指针，一个指向最终结果的指针</h1><h2 id="283-Move-Zeroes"><a href="#283-Move-Zeroes" class="headerlink" title="283. Move Zeroes"></a><a href="https://leetcode-cn.com/problems/move-zeroes/">283. Move Zeroes</a></h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">moveZeroes</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//[0...k) store non-zero</span>
        <span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i<span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                nums<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                k<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> k<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="27-Remove-Element"><a href="#27-Remove-Element" class="headerlink" title="27. Remove Element"></a><a href="https://leetcode-cn.com/problems/remove-element/">27. Remove Element</a></h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">removeElement</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">//[0...k) store non-val</span>
        <span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i<span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> val<span class="token punctuation">)</span><span class="token punctuation">{</span>
                nums<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                k<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
 
        <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">int</span> j<span class="token operator">=</span>k<span class="token punctuation">;</span>j<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    
           nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> k<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h2 id="26-Remove-Duplicates-from-Sorted-Array"><a href="#26-Remove-Duplicates-from-Sorted-Array" class="headerlink" title="26. Remove Duplicates from Sorted Array"></a><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/">26. Remove Duplicates from Sorted Array</a></h2><p><code>sorted array</code></p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">removeDuplicates</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token comment">// nums[0...k]store non-duplicate</span>
        <span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> nums<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                k<span class="token operator">++</span><span class="token punctuation">;</span>
                nums<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h1 id="topK"><a href="#topK" class="headerlink" title="topK"></a>topK</h1><h2 id="215-Kth-Largest-Element-in-an-Array"><a href="#215-Kth-Largest-Element-in-an-Array" class="headerlink" title="215. Kth Largest Element in an Array"></a><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/">215. Kth Largest Element in an Array</a></h2><ul>
<li>快排-速度快</li>
<li>堆排序-支持数据的动态增长</li>
</ul>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token comment">//1 ≤ k ≤ 数组的长度</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findKthLargest</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//找第k大转换为找有序排列时的nums[k]</span>
        k <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> k<span class="token punctuation">;</span>
        <span class="token class-name">Random</span> rdm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> num <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token function">findKthLargestR</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> rdm<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> num<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment">//arr[l...r]中寻找nums[k] 并返回nums[k]的位置</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">findKthLargestR</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token class-name">Random</span> rdm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&gt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> rdm<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">&lt;</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">return</span> <span class="token function">findKthLargestR</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> k<span class="token punctuation">,</span>rdm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">&gt;</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">return</span> <span class="token function">findKthLargestR</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>  k<span class="token punctuation">,</span>rdm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> p<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//arr[l...r]中寻找nums[k] 并返回nums[k]的位置 非递归</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">findKthLargest</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token class-name">Random</span> rdm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&gt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> rdm<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">&lt;</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                p <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> rdm<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">&gt;</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                p <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> rdm<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> p<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">partition</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token class-name">Random</span> rdm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//随机索引</span>
        <span class="token keyword">int</span> p <span class="token operator">=</span> rdm<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>r <span class="token operator">-</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> l<span class="token punctuation">;</span>
        <span class="token comment">//保持arr[l]为pivot</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> l<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// arr[l+1...i-1]&lt;v , arr[j+1...r]&gt;v, i is working-pointer</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> r<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> j <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> arr<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> j <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">-</span> arr<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                j<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
            j<span class="token operator">--</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> l<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> j<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> minIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findKthLargest</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h1 id="对撞指针-涉及左右两个方向、翻转"><a href="#对撞指针-涉及左右两个方向、翻转" class="headerlink" title="对撞指针-涉及左右两个方向、翻转"></a>对撞指针-涉及左右两个方向、翻转</h1><h2 id="167-Two-Sum-II-Input-array-is-sorted"><a href="#167-Two-Sum-II-Input-array-is-sorted" class="headerlink" title="167. Two Sum II - Input array is sorted"></a><a href="https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/">167. Two Sum II - Input array is sorted</a></h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">twoSum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> numbers<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> r <span class="token operator">=</span> numbers<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">+</span> numbers<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                l<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">+</span> numbers<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                r<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                res<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> res<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ints <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">twoSum</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="125-Valid-Palindrome"><a href="#125-Valid-Palindrome" class="headerlink" title="125. Valid Palindrome"></a><a href="https://leetcode-cn.com/problems/valid-palindrome/">125. Valid Palindrome</a></h2><h2 id="345-Reverse-Vowels-of-a-String"><a href="#345-Reverse-Vowels-of-a-String" class="headerlink" title="345. Reverse Vowels of a String"></a><a href="https://leetcode-cn.com/problems/reverse-vowels-of-a-string/">345. Reverse Vowels of a String</a></h2><h2 id="11-Container-With-Most-Water"><a href="#11-Container-With-Most-Water" class="headerlink" title="11. Container With Most Water"></a><a href="https://leetcode-cn.com/problems/container-with-most-water/">11. Container With Most Water</a></h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxArea</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> r <span class="token operator">=</span> height<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>l<span class="token operator">&lt;</span>r<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> cur <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>height<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> height<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cur <span class="token operator">=</span> height<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>r <span class="token operator">-</span> l<span class="token punctuation">)</span><span class="token punctuation">;</span>
                max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
                l<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                cur <span class="token operator">=</span> height<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>r <span class="token operator">-</span> l<span class="token punctuation">)</span><span class="token punctuation">;</span>
                max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
                r<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> max<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h1 id="滑动窗口-子串"><a href="#滑动窗口-子串" class="headerlink" title="滑动窗口-子串"></a>滑动窗口-子串</h1><h2 id="209-Minimum-Size-Subarray-Sum"><a href="#209-Minimum-Size-Subarray-Sum" class="headerlink" title="209. Minimum Size Subarray Sum"></a><a href="https://leetcode-cn.com/problems/minimum-size-subarray-sum/">209. Minimum Size Subarray Sum</a></h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minSubArrayLen</span><span class="token punctuation">(</span><span class="token keyword">int</span> target<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//nums[l...r]为滑动窗口</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span> r <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span>sum <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                r<span class="token operator">++</span><span class="token punctuation">;</span>
                sum <span class="token operator">+=</span> nums<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                sum <span class="token operator">-=</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
                l<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            
            <span class="token keyword">if</span> <span class="token punctuation">(</span>sum<span class="token operator">&gt;=</span>target<span class="token punctuation">)</span><span class="token punctuation">{</span>
                res <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> r <span class="token operator">-</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span> res <span class="token operator">==</span> nums<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
                
        
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<h2 id="3-Longest-Substring-Without-Repeating-Characters"><a href="#3-Longest-Substring-Without-Repeating-Characters" class="headerlink" title="3. Longest Substring Without Repeating Characters"></a><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">3. Longest Substring Without Repeating Characters</a></h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">lengthOfLongestSubstring</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> freq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">//s[l...r]为滑动窗口</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span> r<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">&lt;</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> freq<span class="token punctuation">[</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>r<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                r<span class="token operator">++</span><span class="token punctuation">;</span>
                freq<span class="token punctuation">[</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                freq<span class="token punctuation">[</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>
                l<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            res <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> r <span class="token operator">-</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="438-Find-All-Anagrams-in-a-String"><a href="#438-Find-All-Anagrams-in-a-String" class="headerlink" title="438. Find All Anagrams in a String"></a><a href="https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/">438. Find All Anagrams in a String</a></h2><h2 id="76-Minimum-Window-Substring"><a href="#76-Minimum-Window-Substring" class="headerlink" title="76. Minimum Window Substring"></a><a href="https://leetcode-cn.com/problems/minimum-window-substring/">76. Minimum Window Substring</a></h2><h1 id="查找数组中满足某些条件-异位词-HashSet-HashMap"><a href="#查找数组中满足某些条件-异位词-HashSet-HashMap" class="headerlink" title="查找数组中满足某些条件(异位词)-HashSet,HashMap"></a>查找数组中满足某些条件(异位词)-HashSet,HashMap</h1><h2 id="349-Intersection-of-Two-Arrays"><a href="#349-Intersection-of-Two-Arrays" class="headerlink" title="349. Intersection of Two Arrays"></a><a href="https://leetcode-cn.com/problems/intersection-of-two-arrays/">349. Intersection of Two Arrays</a></h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashSet</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">intersection</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">record</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> resultSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">record</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">record</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                resultSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>resultSet<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span> re <span class="token operator">:</span> resultSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> re<span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><h2 id="翻转-pre-null"><a href="#翻转-pre-null" class="headerlink" title="翻转 -pre =null"></a>翻转 -pre =null</h2><h2 id="删除-pre-dummyHead"><a href="#删除-pre-dummyHead" class="headerlink" title="删除-pre=dummyHead"></a>删除-pre=dummyHead</h2>]]></content>
      <tags>
        <tag>study</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-install-tutorial</title>
    <url>/2021/03/06/hexo-install-tutorial/</url>
    <content><![CDATA[<p>主要记录下这几天搭建第一次使用hexo博客==踩坑==的<strong>过程</strong>，为了以后能少遇到点坑</p>
<span id="more"></span>

<h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><hr>
<p>一切以<a href="https://hexo.io/zh-cn/docs/">hexo官网安装文档</a>为准～</p>
<h2 id="安装Homebrew-插曲"><a href="#安装Homebrew-插曲" class="headerlink" title="安装Homebrew-插曲"></a>安装Homebrew-插曲</h2><p>Homebrew 是一个包管理工具。相信我，每一个Mac都必备的包管理工具🔧</p>
<p>打开终端<code>terminal</code><a href="https://brew.sh/">官网一行代码安装</a></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="question"><a href="#question" class="headerlink" title="question"></a>question</h3><ul>
<li>输入这条命令回车执行后，由于访问<a href="https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E7%94%B1%E4%BA%8E%E5%9B%BD%E5%86%85%E7%BD%91%E7%BB%9C%E7%8E%AF%E5%A2%83%E9%97%AE%E9%A2%98%EF%BC%8C%E7%BB%88%E7%AB%AF%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%87%BA%E7%8E%B0%E7%9B%B4%E6%8E%A5%E5%8D%A1%E6%AD%BB%EF%BC%88%E4%BD%86%E6%98%AF%E7%9B%B4%E6%8E%A5%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8D%B4%E8%83%BD%E5%BE%88%E5%BF%AB%E6%89%93%E5%BC%80%E8%BF%99%E4%B8%AA%E7%BD%91%E5%9D%80%EF%BC%89%E3%80%82">https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh这个网站由于国内网络环境问题，终端可能会出现直接卡死（但是直接用浏览器却能很快打开这个网址）。</a></li>
<li><code>brew install</code>时下载速度非常慢</li>
</ul>
<h3 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h3><p><a href="http://mirrors.ustc.edu.cn/help/brew.git.html">中科大源，你值得用</a> </p>
<h1 id="安装hexo美化主题nexT"><a href="#安装hexo美化主题nexT" class="headerlink" title="安装hexo美化主题nexT"></a><a href="https://theme-next.js.org/docs/getting-started/">安装hexo美化主题nexT</a></h1><blockquote>
<p>Open your Terminal, change to Hexo site root directory and install NexT theme:</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ cd hexo-site
$ npm install hexo-theme-next<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</blockquote>
<p><a href="https://siriusq.top/Next%E5%8D%87%E7%BA%A7-Mac%E8%BF%81%E7%A7%BB.html">美化参考</a></p>
<h1 id="部署参考"><a href="#部署参考" class="headerlink" title="部署参考"></a><a href="https://blog.csdn.net/yakuaback/article/details/104513748">部署参考</a></h1><p>部署插件</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<h1 id="开始踩坑"><a href="#开始踩坑" class="headerlink" title="开始踩坑"></a>开始踩坑</h1><hr>
<p>一把辛酸泪😭</p>
<h2 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 电脑版本
ProductName:	macOS
ProductVersion:	11.2.2
BuildVersion:	20D80
# hexo版本
INFO  Validating config
INFO  ==================================
  ███╗   ██╗███████╗██╗  ██╗████████╗
  ████╗  ██║██╔════╝╚██╗██╔╝╚══██╔══╝
  ██╔██╗ ██║█████╗   ╚███╔╝    ██║
  ██║╚██╗██║██╔══╝   ██╔██╗    ██║
  ██║ ╚████║███████╗██╔╝ ██╗   ██║
  ╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝   ╚═╝
========================================
NexT version 8.2.2
Documentation: https://theme-next.js.org
========================================
hexo: 5.4.0
hexo-cli: 4.2.0
os: Darwin 20.3.0 darwin arm64
node: 15.9.0
v8: 8.6.395.17-node.25
uv: 1.41.0
zlib: 1.2.11
brotli: 1.0.9
ares: 1.17.1
modules: 88
nghttp2: 1.42.0
napi: 7
llhttp: 2.1.3
openssl: 1.1.1i
cldr: 37.0
icu: 67.1
tz: 2019c
unicode: 13.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="部署命令太长"><a href="#部署命令太长" class="headerlink" title="部署命令太长"></a>部署命令太长</h2><h4 id="solution-1"><a href="#solution-1" class="headerlink" title="solution"></a>solution</h4><p>在<code>~/.zshrc</code>增加别名</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">alias hd='hexo clean &amp;&amp; hexo g &amp;&amp; hexo d'
alias hs='hexo clean &amp;&amp; hexo g &amp;&amp; hexo s'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h2 id="about-、tags等指定-about-相对路径的页面"><a href="#about-、tags等指定-about-相对路径的页面" class="headerlink" title="about 、tags等指定/about/相对路径的页面"></a>about 、tags等指定/about/相对路径的页面</h2><h4 id="solution-2"><a href="#solution-2" class="headerlink" title="solution"></a>solution</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hexo new page "about"
hexo new page "tags"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h2 id="图片显示问题-图裂"><a href="#图片显示问题-图裂" class="headerlink" title="图片显示问题-图裂"></a>图片显示问题-图裂</h2><p>markdown编辑器与博客里不能同时显示图片</p>
<h3 id="solution-3"><a href="#solution-3" class="headerlink" title="solution"></a>solution</h3><ol>
<li>设置每次生成文章时，同时生成一个同名文件夹，用来存放图片。<code>_config.yml</code>里找到<code>post_asset_folder</code>设置为<code>true</code>。即<code>post_asset_folder: true</code></li>
<li>设置markdown编辑器保存图片的路径为同名文件夹并优先使用相对路径。图为使用typora编辑器</li>
</ol>
<p><img src="/2021/03/06/hexo-install-tutorial/image-20210306030054324.png" alt="设置图片选项"></p>
<ol start="3">
<li>安装插件-<strong>一定</strong>要安装下面链接里面的，网上有很多别的，亲测都不成功😢</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">npm install https://github.com/CodeFalling/hexo-asset-image<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="nexT配置-更改头像-路径问题"><a href="#nexT配置-更改头像-路径问题" class="headerlink" title="nexT配置-更改头像-路径问题"></a>nexT配置-更改头像-路径问题</h2><p>npm安装的主题文件在<code>node_modules/hexo-theme-next/</code>里面！！！<code>_config.next.yml</code>中使用的是相对位于``./node_modules/hexo-theme-next/source<code>的路径，所以实际要把图片发在</code>./node_modules/hexo-theme-next/source/<code>这个目录里。例如头像的实际路径为</code>/Users/shinan/blog/node_modules/hexo-theme-next/source/images/avatar.png`</p>
<p>配置文件也是从<code>./node_modules/hexo-theme-next/</code>这里面复制出来的</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cp node_modules/hexo-theme-next/_config.yml _config.next.yml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<h2 id="gitalk-出现403"><a href="#gitalk-出现403" class="headerlink" title="gitalk-出现403"></a>gitalk-出现403</h2><p>反向代理有问题<a href="https://liuyueyang.top/022111.html#%E5%88%86%E6%9E%90">参考</a></p>
<h4 id="solution-4"><a href="#solution-4" class="headerlink" title="solution"></a>solution</h4><p><code>_config.next.yml</code>更改proxy</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">gitalk</span><span class="token punctuation">:</span>
  <span class="token comment">#proxy: https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token # This is official proxy adress</span>
  <span class="token key atrule">proxy</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//shielded<span class="token punctuation">-</span>brushlands<span class="token punctuation">-</span>08810.herokuapp.com/https<span class="token punctuation">:</span>//github.com/login/oauth/access_token<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>这个插件每篇文章都要<strong>登进去初始化</strong>一下</p>
<h2 id="同时部署GitHub-gitee-自动部署分支为master"><a href="#同时部署GitHub-gitee-自动部署分支为master" class="headerlink" title="同时部署GitHub,gitee-自动部署分支为master"></a>同时部署GitHub,gitee-自动部署分支为master</h2><p>github-pages 、gitee-pages默认部署为main分支</p>
<p>单一部署时，<code>_config.yml</code>里配置推送的分支为main生效，同时部署时就不生效了（迷惑🙁）。</p>
<h3 id="solution-5"><a href="#solution-5" class="headerlink" title="solution"></a>solution</h3><p>在仓库里更改默认的部署分支</p>
<p><img src="/2021/03/06/hexo-install-tutorial/image-20210306033805713.png" alt="gitee更改"></p>
<p><img src="/2021/03/06/hexo-install-tutorial/image-20210306034610817.png" alt="github更改"></p>
<h2 id="同时部署GitHub-gitee-只能配置其中的一个能看文章详情"><a href="#同时部署GitHub-gitee-只能配置其中的一个能看文章详情" class="headerlink" title="同时部署GitHub,gitee-只能配置其中的一个能看文章详情"></a>同时部署GitHub,gitee-只能配置其中的一个能看文章详情</h2><p>由于只能在<code>_config.yml</code>里配置一个访问路径。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># URL
## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'
#url: http://jojo-995.github.io
url: https://jojo-995.gitee.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="solution-6"><a href="#solution-6" class="headerlink" title="solution"></a>solution</h3><p>待解决。目前暂时先选择使用gitee</p>
<h2 id="github经常在命令行里443"><a href="#github经常在命令行里443" class="headerlink" title="github经常在命令行里443"></a>github经常在命令行里443</h2><p>解析github相关网站域名经常经常出现问题</p>
<h4 id="solution-7"><a href="#solution-7" class="headerlink" title="solution"></a>solution</h4><p>把代理关掉或者换个代理或者修改hosts文件，绑定ip</p>
<pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">vim /etc/hosts
# 添加
# for github
140.82.113.4 github.com
199.232.69.194 github.global.ssl.fastly.net
185.199.108.153  assets-cdn.github.com
185.199.109.153  assets-cdn.github.com
185.199.110.153  assets-cdn.github.com
185.199.111.153  assets-cdn.github.com
185.199.108.133 raw.githubusercontent.com
185.199.109.133 raw.githubusercontent.com
185.199.110.133 raw.githubusercontent.com
185.199.111.133 raw.githubusercontent.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="支持emoji"><a href="#支持emoji" class="headerlink" title="支持emoji"></a>支持emoji</h2><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#安装支持插件
npm install hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h2 id="不显示mermaid图表"><a href="#不显示mermaid图表" class="headerlink" title="不显示mermaid图表"></a>不显示mermaid图表</h2><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#安装支持插件
npm install hexo-filter-mermaid-diagrams<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>主题配置文件</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Mermaid tag</span>
<span class="token key atrule">mermaid</span><span class="token punctuation">:</span>
  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<hr>
<p>hexo安装10分钟，踩坑十小时😤 终于结束了！！说好了从明天起开始早起又黄了🙄</p>
]]></content>
      <tags>
        <tag>tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown-tutorial</title>
    <url>/2021/03/06/markdown-tutorial/</url>
    <content><![CDATA[<hr>
<p>高情商：保姆级教程涅槃重生</p>
<p><del>低情商：之前的🌶️👀</del></p>
<hr>
<h1 id="MarkDown教程"><a href="#MarkDown教程" class="headerlink" title="MarkDown教程"></a>MarkDown教程</h1><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息(我最经常就是拿来写记笔记、写<a href="http://jojo-995.gitee.io/">个人博客</a>)。视频的文档都会放在这个博客里面。博客里显示可能跟视频不一样是因为浏览器解析的问题，相信你自己电脑里的typora就好～</p>
<span id="more"></span>

<h1 id="Typora-编辑器"><a href="#Typora-编辑器" class="headerlink" title="Typora 编辑器"></a>Typora 编辑器</h1><p>选择使用 Typora 编辑器来讲解 Markdown 的语法，Typora 支持 MacOS 、Windows、Linux 平台，且包含多种主题，编辑后直接渲染出效果。</p>
<p>支持导出HTML、PDF、Word、图片等多种类型文件。</p>
<p>Typora 官网进行下载：<a href="https://typora.io/">https://typora.io/</a></p>
<h1 id="编辑器的偏好设置-懒人设置"><a href="#编辑器的偏好设置-懒人设置" class="headerlink" title="编辑器的偏好设置(懒人设置)"></a>编辑器的偏好设置(<del>懒人设置</del>)</h1><p>Typora版本0.9.9.36.2 (4901)</p>
<h2 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h2><p>只要能换主题的地方我基本都要换- -。这里换成vue。（这里只是看习惯这个皮肤了！可以不换！！！）</p>
<h2 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h2><p><img src="/2021/03/06/markdown-tutorial/image-20210306151819080.png" alt="image-20210306151819080"></p>
<p><img src="/2021/03/06/markdown-tutorial/image-20210306151829685.png" alt="image-20210306151829685"></p>
<p><img src="/2021/03/06/markdown-tutorial/image-20210306151839250.png" alt="image-20210306151839250"></p>
<h1 id="MarkDown基本语法"><a href="#MarkDown基本语法" class="headerlink" title="MarkDown基本语法"></a>MarkDown基本语法</h1><p>正式开始语法部分～</p>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p><code># 标题名字（井号的个数代表标题的级数）</code></p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 一级标题</span>
<span class="token title important"><span class="token punctuation">##</span> 二级标题</span>
<span class="token title important"><span class="token punctuation">###</span> 三级标题</span>
<span class="token title important"><span class="token punctuation">####</span> 四级标题</span>
<span class="token title important"><span class="token punctuation">#####</span> 五级标题</span>
<span class="token title important"><span class="token punctuation">######</span> 六级标题</span>
<span class="token title important"><span class="token punctuation">#######</span> 最多支持六级标题</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>段落没有特殊的格式，直接用一个空行来表示重新开始一个段落。</p>
<h2 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h2><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">这是用来 <span class="token italic"><span class="token punctuation">*</span><span class="token content">斜体</span><span class="token punctuation">*</span></span> 的 <span class="token italic"><span class="token punctuation">_</span><span class="token content">文本</span><span class="token punctuation">_</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>这是用来 <em>斜体</em> 的 <em>文本</em></p>
<h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">这是用来 <span class="token bold"><span class="token punctuation">**</span><span class="token content">加粗</span><span class="token punctuation">**</span></span> 的 <span class="token bold"><span class="token punctuation">__</span><span class="token content">文本</span><span class="token punctuation">__</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>这是用来 <strong>加粗</strong> 的 <strong>文本</strong></p>
<h3 id="斜体-加粗"><a href="#斜体-加粗" class="headerlink" title="斜体+加粗"></a>斜体+加粗</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">这是用来 <span class="token bold"><span class="token punctuation">**</span><span class="token content"><span class="token italic"><span class="token punctuation">*</span><span class="token content">斜体+加粗</span><span class="token punctuation">*</span></span></span><span class="token punctuation">**</span></span> 的 <span class="token bold"><span class="token punctuation">__</span><span class="token content"><span class="token italic"><span class="token punctuation">_</span><span class="token content">文本</span><span class="token punctuation">_</span></span></span><span class="token punctuation">__</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>这是用来 <em><strong>斜体+加粗</strong></em> 的 <em><strong>文本</strong></em></p>
<h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">这就是 <span class="token strike"><span class="token punctuation">~~</span><span class="token content">删除线</span><span class="token punctuation">~~</span></span> (使用波浪号)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>这就是 <del>删除线</del> (使用波浪号)</p>
<h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>下划线是HTML语法</p>
<p><code>下划线</code> <u>下划线(快捷键<code>command</code>+<code>u</code>，视频中所有的快捷键都是针对Mac系统，其他系统可自行查找)</u></p>
<h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>可以在一行中使用三个或更多的 <code>*</code>、<code>-</code> 或 <code>_</code> 来添加分隔线</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important">***
<span class="token punctuation">------</span></span>
___<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<hr>
<hr>
<hr>
<h2 id="扩展语法的说明"><a href="#扩展语法的说明" class="headerlink" title="扩展语法的说明"></a>扩展语法的说明</h2><p>部分渲染器可能不支持该效果，若不在意跨软件性可以使用（意思就是换了个别的支持markdown语法的地方敲字，某些样式可能识别不出来）</p>
<h2 id="高亮（需勾选扩展语法）"><a href="#高亮（需勾选扩展语法）" class="headerlink" title="高亮（需勾选扩展语法）"></a>高亮（需勾选扩展语法）</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">这是用来 ==高亮== 的文本<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>这是用来 ==高亮== 的文本</p>
<h2 id="下标（需勾选扩展语法）"><a href="#下标（需勾选扩展语法）" class="headerlink" title="下标（需勾选扩展语法）"></a>下标（需勾选扩展语法）</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">水 H<span class="token strike"><span class="token punctuation">~</span><span class="token content">2</span><span class="token punctuation">~</span></span>O 
双氧水 H<span class="token strike"><span class="token punctuation">~</span><span class="token content">2</span><span class="token punctuation">~</span></span>O<span class="token strike"><span class="token punctuation">~</span><span class="token content">2</span><span class="token punctuation">~</span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>水 H<del>2</del>O </p>
<p>双氧水 H<del>2</del>O<del>2</del></p>
<h2 id="上标（需勾选扩展语法）"><a href="#上标（需勾选扩展语法）" class="headerlink" title="上标（需勾选扩展语法）"></a>上标（需勾选扩展语法）</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">面积 m^2^ 
体积 m^3^<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>面积 m^2^<br>体积 m^3^</p>
<h2 id="表情符号"><a href="#表情符号" class="headerlink" title="表情符号"></a>表情符号</h2><p> Emoji 支持表情符号，你可以用系统默认的 Emoji 符号。</p>
<p>输入方式</p>
<ol>
<li>输入 <code>:</code> 将会出现智能提示<code>:smile:</code><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></li>
<li>直接输入法选入</li>
<li>快捷键后点选：<ul>
<li>Mac: control+command+space点选</li>
<li>Window:使用 Win键+. 或者Win键+. 点选</li>
</ul>
</li>
</ol>
<p>不同方式输入的emoji可能最后渲染的会不一样😄，影响不大</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">:smile: :laughing: :dizzy_face: :sob: :cold_sweat: :sweat_smile:  :cry: :triumph: :heart_eyes: :relaxed: :sunglasses: :weary: :100: :clap: :bell: :gift: :question: :bomb: :heart: :coffee: :cyclone: :bow: :kiss: :pray: :sweat_drops: :hankey: :exclamation: :anger:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😆</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😵</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f635.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😭</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f630.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😅</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>  <span class="github-emoji"><span>😢</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😤</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f624.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😍</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>☺</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/263a.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😩</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f629.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>💯</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4af.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>👏</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>🔔</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f514.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>🎁</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f381.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>❓</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2753.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>💣</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a3.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>❤</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>☕</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>🌀</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f300.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>🙇</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f647.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>💋</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f48b.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>🙏</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>💩</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a9.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>❗</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>💢</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a2.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>符号 空格</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 可以使用 <span class="token code keyword">`*`</span> 作为标记
<span class="token list punctuation">+</span> 也可以使用 <span class="token code keyword">`+`</span>
<span class="token list punctuation">-</span> 或者 <span class="token code keyword">`-`</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ul>
<li>可以使用 <code>*</code> 作为标记</li>
</ul>
<ul>
<li>也可以使用 <code>+</code></li>
</ul>
<ul>
<li>或者 <code>-</code></li>
</ul>
<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>数字 <code>.</code> 空格</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 有序列表以数字和 <span class="token code keyword">`.`</span> 开始；
<span class="token list punctuation">3.</span> 数字的序列并不会影响生成的列表序列；
<span class="token list punctuation">4.</span> 但仍然推荐按照自然顺序（1.2.3...）编写。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ol>
<li>有序列表以数字和 <code>.</code> 开始；</li>
<li>数字的序列并不会影响生成的列表序列；</li>
<li>但仍然推荐按照自然顺序（1.2.3…）编写</li>
</ol>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">可以使用：数字\. 来取消显示为列表（用反斜杠进行转义）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>使用 <code>|</code> 来分隔不同的单元格，使用 <code>-</code> 来分隔表头和其他行：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token table"><span class="token table-header-row"><span class="token table-header important">name </span><span class="token punctuation">|</span><span class="token table-header important"> price</span>
</span><span class="token table-line"><span class="token punctuation">---</span> <span class="token punctuation">|</span> <span class="token punctuation">---</span>
</span><span class="token table-data-rows"><span class="token table-data">fried chicken </span><span class="token punctuation">|</span><span class="token table-data"> 19</span>
<span class="token table-data">cola</span><span class="token punctuation">|</span><span class="token table-data">5</span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>为了使 Markdown 更清晰，<code>|</code> 和 <code>-</code> 两侧需要至少有一个空格（最左侧和最右侧的 <code>|</code> 外就不需要了）。</p>
</blockquote>
<table>
<thead>
<tr>
<th>name</th>
<th>price</th>
</tr>
</thead>
<tbody><tr>
<td>fried chicken</td>
<td>19</td>
</tr>
<tr>
<td>cola</td>
<td>5</td>
</tr>
</tbody></table>
<p>为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用 <code>|</code> 来标记单元格边界，在表头下方的分隔线标记中加入 <code>:</code>，即可标记下方单元格内容的对齐方式：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token table"><span class="token table-header-row"><span class="token punctuation">|</span><span class="token table-header important">    name       </span><span class="token punctuation">|</span><span class="token table-header important"> price </span><span class="token punctuation">|</span>
</span><span class="token table-line"><span class="token punctuation">|</span> <span class="token punctuation">:------------</span> <span class="token punctuation">|</span> <span class="token punctuation">:---:</span> <span class="token punctuation">|</span>
</span><span class="token table-data-rows"><span class="token punctuation">|</span><span class="token table-data"> fried chicken </span><span class="token punctuation">|</span><span class="token table-data"> 19    </span><span class="token punctuation">|</span>
<span class="token punctuation">|</span><span class="token table-data"> cola          </span><span class="token punctuation">|</span><span class="token table-data">  32   </span><span class="token punctuation">|</span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<table>
<thead>
<tr>
<th align="left">name</th>
<th align="center">price</th>
</tr>
</thead>
<tbody><tr>
<td align="left">fried chicken</td>
<td align="center">19</td>
</tr>
<tr>
<td align="left">cola</td>
<td align="center">32</td>
</tr>
</tbody></table>
<p>==使用快捷键<code>command</code>+<code>opt</code>+<code>T</code>更方便(段落→表格→插入表格，即可查看快捷键)==</p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>开头使用 <strong>&gt;</strong> 符号 ，然后后面紧跟一个<strong>空格</strong>符号</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token blockquote punctuation">&gt;</span> “后悔创业”<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<blockquote>
<p>“后悔创业”</p>
</blockquote>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token blockquote punctuation">&gt;</span> 也可以在引用中
<span class="token blockquote punctuation">&gt;&gt;</span> 使用嵌套的引用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<blockquote>
<p>也可以在引用中</p>
<blockquote>
<p>使用嵌套的引用</p>
</blockquote>
</blockquote>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>代码块中的文本（包括 Markdown 语法）都会显示为原始内容</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">​```语言名称（也可以不指定）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h3><p>也可以通过反引号（``），插入行内代码</p>
<p><img src="/2021/03/06/markdown-tutorial/image-20210306171044147.png" alt="image-20210306171044147"></p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">例如 <span class="token code keyword">`Markdown`</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>例如 <code>Markdown</code></p>
<h2 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h2><h3 id="外部跳转–超链接"><a href="#外部跳转–超链接" class="headerlink" title="外部跳转–超链接"></a>外部跳转–超链接</h3><p>格式为 <code>[link text](link)</code>。</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url">[<span class="token content">帮助文档</span>](<span class="token url">https://support.typora.io/Links/#faq</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><a href="https://support.typora.io/Links/#faq">帮助文档</a></p>
<h3 id="内部跳转–本文件内跳-Typora支持"><a href="#内部跳转–本文件内跳-Typora支持" class="headerlink" title="内部跳转–本文件内跳-Typora支持"></a>内部跳转–本文件内跳-Typora支持</h3><p>格式为 <code>[link text](#要去的目的地-标题名称）</code>。</p>
<p>不管标题有几个#，设置链接时<em>只有一个#<em>，标题里的</em>空格</em>可以用’-‘代替，开头结尾的空格无所谓。</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url">[<span class="token content">我想跳转</span>](<span class="token url">#完结</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<blockquote>
<p>Open Links in Typora</p>
<p>You can use <code>command+click</code> (macOS), or <code>ctrl+click</code> (Linux/Windows) on links in Typora to jump to target headings, or open them in Typora, or open in related apps.</p>
</blockquote>
<p><a href="#%E5%AE%8C%E7%BB%93">我想跳转</a></p>
<p>如果不想跳到标题，则可以自定义<a name="anchor">锚点</a> </p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#anchor<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>不，你不想跳，你要回去<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>anchor<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>锚点<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>使用 <code>&lt;&gt;</code> 包括的 URL 或邮箱地址会被自动转换为超链接：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&lt;https://www.baidu.com&gt;

&lt;123@email.com&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p><a href="https://www.baidu.com/">https://www.baidu.com</a></p>
<p><a href="mailto:123@email.com">123@email.com</a></p>
<h3 id="重复链接"><a href="#重复链接" class="headerlink" title="重复链接"></a>重复链接</h3><p>当在一个文章==重复使用同一个链接（对下面的图片也是一样的适用）==时，我们可以通过变量来设置一个链接，相当于给这个链接起了个名字，方便统一修改，变量赋值在文档引用的下面进行：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">这个链接用 1 作为网址变量名字 <span class="token url">[<span class="token content">百度</span>][<span class="token variable">1</span>]</span>
这个链接用 jojo 作为网址变量名字 <span class="token url">[<span class="token content">JoJo的博客</span>][<span class="token variable">jojo</span>]</span>
然后在文档的结尾为变量赋值（网址）

  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://www.baidu.com/</span>
  <span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">jojo</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://jojo-995.gitee.io/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>这个链接用 1 作为网址变量名字 <a href="http://www.baidu.com/">百度</a><br>这个链接用 jojo 作为网址变量名字 <a href="http://jojo-995.gitee.io/">JoJo的博客</a><br>然后在文档的结尾为变量赋值（网址）</p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">自己起的图片名字</span>](<span class="token url">图片地址或者图片本地存储的路径</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="网上的图片"><a href="#网上的图片" class="headerlink" title="网上的图片"></a>网上的图片</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">我爱的🍗</span>](<span class="token url">https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&amp;quality=100&amp;size=b4000_4000&amp;sec=1580814517&amp;di=2630beac440e5dab0e44c7286a3b2b61&amp;src=http://imgsrc.baidu.com/forum/w=580/sign=12c730c4ff03738dde4a0c2a831ab073/9497794f9258d1091818e6d6d858ccbf6d814d1b.jpg</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="/2021/03/06/markdown-tutorial/9497794f9258d1091818e6d6d858ccbf6d814d1b.jpg" alt="炸鸡"></p>
<h3 id="本地图片"><a href="#本地图片" class="headerlink" title="本地图片"></a>本地图片</h3><p>在同一个文件夹里（用相对路径）或者直接拷贝（配合snipaste截屏工具使用效果一级棒）<a href="https://zh.snipaste.com/">点击下载sinapste</a></p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">我爱的🍗</span>](<span class="token url">markdown-tutorial/image-20210306172630754.png</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img src="/2021/03/06/markdown-tutorial/image-20210306172630754.png" alt="我爱的🍗"></p>
<h1 id="利用Markdown画图（需勾选扩展语法）"><a href="#利用Markdown画图（需勾选扩展语法）" class="headerlink" title="利用Markdown画图（需勾选扩展语法）"></a>利用Markdown画图（需勾选扩展语法）</h1><p>==<del>我觉得这玩意不如直接用<a href="https://www.processon.com/">processon</a>或<a href="https://app.diagrams.net/">Draw.io</a>在线画了然后截截图</del>==（draw.io还有客户端，<strong>强烈安利</strong> 下面有关的资料除了饼图都可以不用看了，怪我当初太年轻🐶</p>
<hr>
<p>markdown画图也是轻量级的，功能并不全。</p>
<p>Mermaid 是一个用于画流程图、状态图、时序图、甘特图的库，使用 JS 进行本地渲染，广泛集成于许多 Markdown 编辑器中。（不同的编辑器渲染的可能不一样,也非常有可能直接渲染不出来🐶🐶）</p>
<h2 id="饼图-Pie"><a href="#饼图-Pie" class="headerlink" title="饼图(Pie)"></a>饼图(Pie)</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">pie title 我的身体
 "奶茶" : 10
 "炸鸡" : 20
 "水" : 70<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="mermaid">pie title 我的身体
 "奶茶" : 10
 "炸鸡" : 20
 "水" : 70</pre>

<blockquote>
<p><a href="http://support.typora.io/Draw-Diagrams-With-Markdown/">Typora支持mermaid的官方链接</a></p>
</blockquote>
<h2 id="流程图-graph"><a href="#流程图-graph" class="headerlink" title="流程图(graph)"></a>流程图(graph)</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">graph 方向描述
    图表中的其他语句...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>关键字graph表示一个流程图的开始，同时需要指定该图的方向。</p>
<p>其中“方向描述”为：</p>
<table>
<thead>
<tr>
<th align="left">用词</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">TB</td>
<td align="left">从上到下</td>
</tr>
<tr>
<td align="left">BT</td>
<td align="left">从下到上</td>
</tr>
<tr>
<td align="left">RL</td>
<td align="left">从右到左</td>
</tr>
<tr>
<td align="left">LR</td>
<td align="left">从左到右</td>
</tr>
</tbody></table>
<blockquote>
<p>T = TOP，B = BOTTOM，L = LEFT，R = RIGHT，D = DOWN</p>
</blockquote>
<p>最常用的布局方向是TB、LR。</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">graph TB;
  A--&gt;B
  B--&gt;C
  C--&gt;A
 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="mermaid">graph TB;
  A--&gt;B
  B--&gt;C
  C--&gt;A</pre>





<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">graph LR;
  A--&gt;B
  B--&gt;C
  C--&gt;A<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="mermaid">graph LR;
  A--&gt;B
  B--&gt;C
  C--&gt;A</pre>

<h3 id="流程图常用符号及含义"><a href="#流程图常用符号及含义" class="headerlink" title="流程图常用符号及含义"></a>流程图常用符号及含义</h3><h4 id="节点形状"><a href="#节点形状" class="headerlink" title="节点形状"></a>节点形状</h4><table>
<thead>
<tr>
<th align="left">表述</th>
<th align="left">说明</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">id[文字]</td>
<td align="left">矩形节点</td>
<td>表示过程，也就是整个流程中的一个环节</td>
</tr>
<tr>
<td align="left">id(文字)</td>
<td align="left">圆角矩形节点</td>
<td>表示开始和结束</td>
</tr>
<tr>
<td align="left">id((文字))</td>
<td align="left">圆形节点</td>
<td>表示连接。为避免流程过长或有交叉，可将流程切开。成对</td>
</tr>
<tr>
<td align="left">id{文字}</td>
<td align="left">菱形节点</td>
<td>表示判断、决策</td>
</tr>
<tr>
<td align="left">id&gt;文字]</td>
<td align="left">右向旗帜状节点</td>
<td></td>
</tr>
</tbody></table>
<p><strong>单向箭头线段</strong>：表示流程进行方向</p>
<blockquote>
<p>id即为节点的唯一标识，A~F 是当前节点名字，类似于变量名，画图时便于引用</p>
<p>括号内是节点中要显示的文字，默认节点的名字和显示的文字都为A</p>
</blockquote>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">graph TB
  A
  B(圆角矩形节点)
  C[矩形节点]
  D((圆形节点))
  E{菱形节点}
  F&gt;右向旗帜状节点] <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="mermaid">graph TB
  A
  B(圆角矩形节点)
  C[矩形节点]
  D((圆形节点))
  E{菱形节点}
  F&gt;右向旗帜状节点]</pre>



<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">graph TB
    begin(出门)--&gt; buy[买炸鸡]
    buy --&gt; IsRemaining{"还有没有炸鸡？"}
    IsRemaining --&gt;|有|happy[买完炸鸡开心]--&gt; goBack(回家)
    IsRemaining --没有--&gt; sad["伤心"]--&gt; goBack
    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="mermaid">graph TB
    begin(出门)--&gt; buy[买炸鸡]
    buy --&gt; IsRemaining{"还有没有炸鸡？"}
    IsRemaining --&gt;|有|happy[买完炸鸡开心]--&gt; goBack(回家)
    IsRemaining --没有--&gt; sad["伤心"]--&gt; goBack</pre>





<h4 id="连线"><a href="#连线" class="headerlink" title="连线"></a>连线</h4><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">graph TB
  A1--&gt;B1
  A2---B2
  A3--text---B3
  A4--text--&gt;B4
  A5-.-B5
  A6-.-&gt;B6
  A7-.text.-B7
  A8-.text.-&gt;B8
  A9===B9
  A10==&gt;B10
  A11==text===B11
  A12==text==&gt;B12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="mermaid">graph TB
  A1--&gt;B1
  A2---B2
  A3--text---B3
  A4--text--&gt;B4
  A5-.-B5
  A6-.-&gt;B6
  A7-.text.-B7
  A8-.text.-&gt;B8
  A9===B9
  A10==&gt;B10
  A11==text===B11
  A12==text==&gt;B12</pre>

<pre class="mermaid">graph TB
 A ---B</pre>



<h3 id="子图表"><a href="#子图表" class="headerlink" title="子图表"></a>子图表</h3><p>使用以下语法添加子图表</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">subgraph 子图表名称
    子图表中的描述语句...
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">graph TB
	  subgraph 买炸鸡前
   			 begin(出门)--&gt; buy[出门买炸鸡]
    end
    buy --&gt; IsRemaining{"还有没有炸鸡？"}
    IsRemaining --没有--&gt; sad["伤心"]--&gt; goBack(回家)
    IsRemaining --&gt;|有|happy[买完炸鸡开心]--&gt; goBack<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="mermaid">graph TB
      subgraph 买炸鸡前
                begin(出门)--&gt; buy[出门买炸鸡]
    end
    buy --&gt; IsRemaining{"还有没有炸鸡？"}
    IsRemaining --没有--&gt; sad["伤心"]--&gt; goBack(回家)
    IsRemaining --&gt;|有|happy[买完炸鸡开心]--&gt; goBack</pre>

<h2 id="序列图-sequence-diagram"><a href="#序列图-sequence-diagram" class="headerlink" title="序列图(sequence diagram)"></a>序列图(sequence diagram)</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">sequenceDiagram 
	<span class="token url">[<span class="token content">参与者1</span>][<span class="token variable">消息线</span>]</span>[参与者2]:消息体
    ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p><code>sequenceDiagram</code> 为每幅时序图的固定开头</p>
</blockquote>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">sequenceDiagram
		Title: 买炸鸡
    救救-&gt;&gt;炸鸡店小哥: 还有炸鸡吗？
    炸鸡店小哥--&gt;&gt;救救: 没有，要现炸

<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="mermaid">sequenceDiagram
        Title: 买炸鸡
    救救-&gt;&gt;炸鸡店小哥: 还有炸鸡吗？
    炸鸡店小哥--&gt;&gt;救救: 没有，要现炸</pre>

<h3 id="参与者（participant）"><a href="#参与者（participant）" class="headerlink" title="参与者（participant）"></a>参与者（participant）</h3><p>传统时序图概念中参与者有角色和类对象之分，但这里我们不做此区分，用参与者表示一切参与交互的事物，可以是人、类对象、系统等形式。中间竖直的线段从上至下表示时间的流逝。</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">sequenceDiagram
    participant 参与者 1
    participant 参与者 2
    ...
    participant 简称 as 参与者 3 #该语法可以在接下来的描述中使用简称来代替参与者 3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p><code>participant &lt;参与者名称&gt;</code> 声明参与者，语句次序即为参与者横向排列次序。</p>
</blockquote>
<h3 id="消息线"><a href="#消息线" class="headerlink" title="消息线"></a>消息线</h3><table>
<thead>
<tr>
<th align="left">类型</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-&gt;</td>
<td align="left">无箭头的实线</td>
</tr>
<tr>
<td align="left">–&gt;</td>
<td align="left">无箭头的虚线</td>
</tr>
<tr>
<td align="left">-&gt;&gt;</td>
<td align="left">有箭头的实线（主动发出消息）</td>
</tr>
<tr>
<td align="left">–-&gt;&gt;</td>
<td align="left">有箭头的虚线（响应）</td>
</tr>
<tr>
<td align="left">-x</td>
<td align="left">末端为叉的实线（表示异步）</td>
</tr>
<tr>
<td align="left">–x</td>
<td align="left">末端为叉的虚线（表示异步）</td>
</tr>
</tbody></table>
<h3 id="处理中-激活框"><a href="#处理中-激活框" class="headerlink" title="处理中-激活框"></a>处理中-激活框</h3><p>从消息接收方的时间线上标记一小段时间，表示对消息进行处理的时间间隔。</p>
<p>在消息线末尾增加 <code>+</code> ，则消息接收者进入当前消息的“处理中”状态；<br>在消息线末尾增加 <code>-</code> ，则消息接收者离开当前消息的“处理中”状态。</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">sequenceDiagram
    participant 99 as 救救
    participant seller as 炸鸡店小哥
    99 -&gt;&gt; seller: 还有炸鸡吗？
    seller --&gt;&gt; 99: 没有，要现炸。
    99 -x +seller:给我炸！
    seller --&gt;&gt; -99: 您的炸鸡好了！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="mermaid">sequenceDiagram
    participant 99 as 救救
    participant seller as 炸鸡店小哥
    99 -&gt;&gt; seller: 还有炸鸡吗？
    seller --&gt;&gt; 99: 没有，要现炸。
    99 -x +seller:给我炸！
    seller --&gt;&gt; -99: 您的炸鸡好了！</pre>

<h3 id="注解（note）"><a href="#注解（note）" class="headerlink" title="注解（note）"></a>注解（note）</h3><p>语法如下</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">Note 位置表述 参与者: 标注文字<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>其中位置表述可以为</p>
<table>
<thead>
<tr>
<th align="left">表述</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">right of</td>
<td align="left">右侧</td>
</tr>
<tr>
<td align="left">left of</td>
<td align="left">左侧</td>
</tr>
<tr>
<td align="left">over</td>
<td align="left">在当中，可以横跨多个参与者</td>
</tr>
</tbody></table>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">sequenceDiagram
    participant 99 as 救救
    participant seller as 炸鸡店小哥
    Note over 99,seller : 热爱炸鸡
    Note left of 99 : 女
    Note right of seller : 男
    99 -&gt;&gt; seller: 还有炸鸡吗？
    seller --&gt;&gt; 99: 没有，要现炸。
    99 -x +seller : 给我炸！
    seller --&gt;&gt; -99: 您的炸鸡好了！

<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="mermaid">sequenceDiagram
    participant 99 as 救救
    participant seller as 炸鸡店小哥
    Note over 99,seller : 热爱炸鸡
    Note left of 99 : 女
    Note right of seller : 男
    99 -&gt;&gt; seller: 还有炸鸡吗？
    seller --&gt;&gt; 99: 没有，要现炸。
    99 -x +seller : 给我炸！
    seller --&gt;&gt; -99: 您的炸鸡好了！</pre>

<h3 id="循环（loop）"><a href="#循环（loop）" class="headerlink" title="循环（loop）"></a>循环（loop）</h3><p>在条件满足时，重复发出消息序列。（相当于编程语言中的 while 语句。）</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">sequenceDiagram
    participant 99 as 救救
    participant seller as 炸鸡店小哥
   
<span class="token code keyword">    99 -&gt;&gt; seller: 还有炸鸡吗？
    seller --&gt;&gt; 99: 没有，要现炸。
    99 -&gt;&gt; +seller:给我炸！
    loop 三分钟一次
        99 -&gt;&gt; seller : 我的炸鸡好了吗？
        seller --&gt;&gt; 99 : 正在炸
    end
    seller --&gt;&gt; -99: 您的炸鸡好了！</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="mermaid">sequenceDiagram
    participant 99 as 救救
    participant seller as 炸鸡店小哥
   
    99 -&gt;&gt; seller: 还有炸鸡吗？
    seller --&gt;&gt; 99: 没有，要现炸。
    99 -&gt;&gt; +seller:给我炸！
    loop 三分钟一次
        99 -&gt;&gt; seller : 我的炸鸡好了吗？
        seller --&gt;&gt; 99 : 正在炸
    end
    seller --&gt;&gt; -99: 您的炸鸡好了！</pre>

<h3 id="选择（alt）"><a href="#选择（alt）" class="headerlink" title="选择（alt）"></a>选择（alt）</h3><p>在多个条件中作出判断，每个条件将对应不同的消息序列。（相当于 if 及 else if 语句。）</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">sequenceDiagram    
    participant 99 as 救救
    participant seller as 炸鸡店小哥
    99 -&gt;&gt; seller : 现在就多少只炸好的炸鸡？
    seller --&gt;&gt; 99 : 可卖的炸鸡数
    
<span class="token code keyword">    alt 可卖的炸鸡数 &gt; 3
        99 -&gt;&gt; seller : 买三只！
    else 1 &lt; 可卖的炸鸡数 &lt; 3
        99 -&gt;&gt; seller : 有多少买多少
    else 可卖的炸鸡数 &lt; 1
        99 -&gt;&gt; seller : 那我明天再来
    end</span>

<span class="token code keyword">    seller --&gt;&gt; 99 : 欢迎下次光临</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="mermaid">sequenceDiagram    
    participant 99 as 救救
    participant seller as 炸鸡店小哥
    99 -&gt;&gt; seller : 现在就多少只炸好的炸鸡？
    seller --&gt;&gt; 99 : 可卖的炸鸡数
    
    alt 可卖的炸鸡数 &gt; 3
        99 -&gt;&gt; seller : 买三只！
    else 1 &lt; 可卖的炸鸡数 &lt; 3
        99 -&gt;&gt; seller : 有多少买多少
    else 可卖的炸鸡数 &lt; 1
        99 -&gt;&gt; seller : 那我明天再来
    end

    seller --&gt;&gt; 99 : 欢迎下次光临</pre>

<h3 id="可选（opt）"><a href="#可选（opt）" class="headerlink" title="可选（opt）"></a>可选（opt）</h3><p>在某条件满足时执行消息序列，否则不执行。相当于单个分支的 if 语句。</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">sequenceDiagram
    participant 99 as 救救
    participant seller as 炸鸡店小哥
    99 -&gt;&gt; seller : 买炸鸡
    opt 全都卖完了
        seller --&gt;&gt; 99 : 下次再来
    end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<pre class="mermaid">sequenceDiagram
    participant 99 as 救救
    participant seller as 炸鸡店小哥
    99 -&gt;&gt; seller : 买炸鸡
    opt 全都卖完了
        seller --&gt;&gt; 99 : 下次再来
    end</pre>

<h3 id="并行（Par）"><a href="#并行（Par）" class="headerlink" title="并行（Par）"></a>并行（Par）</h3><p>将消息序列分成多个片段，这些片段并行执行。</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">sequenceDiagram
   participant 99 as 救救
   participant seller as 炸鸡店小哥
   
<span class="token code keyword">    99 -&gt;&gt; seller : 一个炸鸡，一杯可乐！</span>

<span class="token code keyword">    par 并行执行
        seller -&gt;&gt; seller : 装可乐
    and
        seller -&gt;&gt; seller : 炸炸鸡
    end</span>

<span class="token code keyword">    seller --&gt;&gt; 99 : 您的炸鸡好了！</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="mermaid">sequenceDiagram
   participant 99 as 救救
   participant seller as 炸鸡店小哥
   
    99 -&gt;&gt; seller : 一个炸鸡，一杯可乐！

    par 并行执行
        seller -&gt;&gt; seller : 装可乐
    and
        seller -&gt;&gt; seller : 炸炸鸡
    end

    seller --&gt;&gt; 99 : 您的炸鸡好了！</pre>



<h2 id="甘特图（gantt）"><a href="#甘特图（gantt）" class="headerlink" title="甘特图（gantt）"></a>甘特图（gantt）</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"> title 标题
dateFormat 日期格式
section 部分名
任务名:参数一, 参数二, 参数三, 参数四，参数五

 //参数一：crit（是否重要，红框框） 或者 不填
 //参数二：done（已完成）、active（正在进行） 或者 不填(表示为待完成状态)
 //参数三：取小名 或者 不填
 //参数四：任务开始时间
 //参数五：任务结束时间<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p><a href="https://mermaid-js.github.io/mermaid/#/gantt">官方教程</a></p>
</blockquote>
<pre class="line-numbers language-none"><code class="language-none">gantt
       dateFormat  YYYY-MM-DD
       title Adding GANTT diagram functionality to mermaid

       section A section
       Completed task            :done,    des1, 2014-01-06,2014-01-08
       Active task               :active,  des2, 2014-01-09, 3d
       Future task               :         des3, after des2, 5d
       Future task2              :         des4, after des3, 5d

       section Critical tasks
       Completed task in the critical line :crit, done, 2014-01-06,24h
       Implement parser and jison          :crit, done, after des1, 2d
       Create tests for parser             :crit, active, 3d
       Future task in critical line        :crit, 5d
       Create tests for renderer           :2d
       Add to mermaid                      :1d

       section Documentation
       Describe gantt syntax               :active, a1, after des1, 3d
       Add gantt diagram to demo page      :after a1  , 20h
       Add another diagram to demo page    :doc1, after a1  , 48h

       section Last section
       Describe gantt syntax               :after doc1, 3d
       Add gantt diagram to demo page      :20h
       Add another diagram to demo page    :48h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="mermaid">gantt
       dateFormat  YYYY-MM-DD
       title Adding GANTT diagram functionality to mermaid

       section A section
       Completed task            :done,    des1, 2014-01-06,2014-01-08
       Active task               :active,  des2, 2014-01-09, 3d
       Future task               :         des3, after des2, 5d
       Future task2              :         des4, after des3, 5d

       section Critical tasks
       Completed task in the critical line :crit, done, 2014-01-06,24h
       Implement parser and jison          :crit, done, after des1, 2d
       Create tests for parser             :crit, active, 3d
       Future task in critical line        :crit, 5d
       Create tests for renderer           :2d
       Add to mermaid                      :1d

       section Documentation
       Describe gantt syntax               :active, a1, after des1, 3d
       Add gantt diagram to demo page      :after a1  , 20h
       Add another diagram to demo page    :doc1, after a1  , 48h

       section Last section
       Describe gantt syntax               :after doc1, 3d
       Add gantt diagram to demo page      :20h
       Add another diagram to demo page    :48h</pre>

<h1 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h1><p><a href="#anchor">不，你不想跳，你要回去</a></p>
<p>🎉🎉愿一年后的我不会再来重做</p>
]]></content>
      <tags>
        <tag>tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>resume-template</title>
    <url>/2021/03/18/resume-template/</url>
    <content><![CDATA[<center><h2>救救-应聘up主的简历👀</h2></center>

<h3 id="个人信息🙋🏻‍♀️"><a href="#个人信息🙋🏻‍♀️" class="headerlink" title="个人信息🙋🏻‍♀️"></a>个人信息🙋🏻‍♀️</h3><p>🌼姓 名：救救                                    🪐籍 贯：火星</p>
<p>👩🏻‍🦰性 别：女                                        🔥年 龄：24（也可改成工龄）</p>
<p>📞手 机：40088088201                  📩邮 箱：<a href="mailto:youremail@xx.com">youremail@xx.com</a> </p>
<h3 id="教育背景🎓"><a href="#教育背景🎓" class="headerlink" title="教育背景🎓"></a>教育背景🎓</h3><div style="height: 60px;">
    <img src="/2021/03/18/resume-template/bilibili-icon.png" style="height:100%;width:75px; float:left;">
      <br>
    <span>Bilibili大学全日制本科，GPA ?.?/4.0，专业前?0%，英语CET-?，每年都获奖学金💰</span>
</div>
### 专业技能（个人特长）👩🏻‍💻

<ul>
<li>💻扎实的==上网冲浪基础==，熟练运用==各种App==。如:<code>随时随机发现新孩子的某微</code>、<code>谢邀人在美国刚下飞机的某乎</code></li>
<li>拥有超快的网速，计算机网络通信原理、网络协议可以跨越山海</li>
<li>了解<code>手撕</code>文化。如：<code>手撕鸡</code>、<code>手撕鸭</code>、<code>手撕绿茶</code>、<code>手撕代码</code></li>
<li>==看视频必三连==👍🪙🌟（<del>这么明显了，懂我意思了🐎？</del>）</li>
</ul>
<h3 id="个人爱好🙈"><a href="#个人爱好🙈" class="headerlink" title="个人爱好🙈"></a>个人爱好🙈</h3><ul>
<li><input checked="" disabled="" type="checkbox"> B站📺不知名的拖更up主</li>
<li><input checked="" disabled="" type="checkbox"> 💃👯‍♂️🍉🍗🧇🥘🍔🥭🍰🍦🏃‍♀️💨</li>
</ul>
<h3 id="工作经历👷🏻‍♀️"><a href="#工作经历👷🏻‍♀️" class="headerlink" title="工作经历👷🏻‍♀️"></a>工作经历👷🏻‍♀️</h3><h4 id="2019-09-至今-Bilibili公司-教程部门-视频工作者"><a href="#2019-09-至今-Bilibili公司-教程部门-视频工作者" class="headerlink" title="2019.09- 至今 - Bilibili公司  - 教程部门 - 视频工作者"></a><em><strong>2019.09- 至今</strong></em> - Bilibili公司  - 教程部门 - 视频工作者</h4><blockquote>
<p><strong>B站</strong>，是<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86">中国大陆</a><a href="https://zh.wikipedia.org/wiki/%E8%A7%86%E9%A2%91%E5%BC%B9%E5%B9%95%E7%BD%91%E7%AB%99">弹幕视频分享网站</a>,至2020年3月31日，B站月均活跃用户达1.72亿</p>
</blockquote>
<h5 id="markdown教程项目"><a href="#markdown教程项目" class="headerlink" title="markdown教程项目"></a>markdown教程项目</h5><ul>
<li>写不出来可以参照<code>STAR法则</code>(情境(situation)、任务（task）、行动(action)、结果(result)四项的缩写)</li>
<li>这是一个教会小伙伴们如何使用markdown的视频</li>
<li>人类的本质是复读机</li>
<li>这是一个教会小伙伴们如何使用markdown的视频</li>
<li>项目成果展示<div style="height: 300px;">
      <img src="/2021/03/18/resume-template/peace-and-love.PNG" style="float:left;height:100%;width:100%;">
</div>
==一般两页就可以了，不用图片的话控制在一页就好，写得突出自己特点就好hr也没心情看长篇大论，这里不用在意typora渲染的图片大小，以最后导出的pdf为准==</li>
</ul>
<hr>
<div style="height: 320px;">
    <img src="/2021/03/18/resume-template/worker-princess.jpg" style="height: 100%;width: 30%;margin: auto 1%;">
    <img src="/2021/03/18/resume-template/worker-love.jpg" style="height: 100%;width: 30%;margin: auto 1%;">
    <img src="/2021/03/18/resume-template/worker-save-life.jpg" style="height:100%;width: 30%;margin: auto 1%;">
</div>


]]></content>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>resume-tutorial</title>
    <url>/2021/03/18/resume-tutorial/</url>
    <content><![CDATA[<hr>
<p>写在前面：这个视频能获得什么？<br>Typora的进阶用法，相当于<a href="https://www.bilibili.com/video/BV1d741147k2#reply4274436410">markdown基本用法视频</a>的一个补充。</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 更改Typora主题-定制你自己的样式<ul>
<li><input checked="" disabled="" type="checkbox"> 介绍什么是css，选择用什么<a href="https://code.visualstudio.com/">文本编辑器</a>去更改</li>
<li><input checked="" disabled="" type="checkbox"> <a href="https://support.typora.io/Add-Custom-CSS/">修改主题css文件</a>, 修改颜色</li>
<li><input checked="" disabled="" type="checkbox"> <a href="https://support.typora.io/Width-of-Writing-Area/">修改书写编辑区大小</a></li>
</ul>
</li>
<li><input checked="" disabled="" type="checkbox"> 插入多个连续空格<code>&amp;emsp;</code></li>
<li><input checked="" disabled="" type="checkbox"> <a href="https://support.typora.io/Task-List/">任务列表的使用</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="https://support.typora.io/Version-Control/">版本恢复</a></li>
<li><input checked="" disabled="" type="checkbox"> <a href="https://support.typora.io/Page-Breaks/">控制导出pdf的分页位置</a></li>
<li><input checked="" disabled="" type="checkbox"> 一个书写简历的思路</li>
</ul>
<p>关于<strong>简历</strong>，可以自己看着来加工，但是可能会在导出的时候要==反复调大小==（<del>当用图片多了以后</del>）。这里只是给大家一个写简历的思路（<del>保护</del>）。如果要用Typora写一个复杂的简历，我觉得就已经违背的选择使用Typora写简历的初心–<strong>简洁，清晰</strong>。</p>
<p>导出成pdf文件的<em><strong>注意点</strong></em></p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 要检查一下分页有没有问题</li>
<li><input checked="" disabled="" type="checkbox"> 有无多余的空白页</li>
<li><input checked="" disabled="" type="checkbox"> 最好以<code>姓名_应聘的职位_简历</code>命名</li>
</ul>
<hr>
<center><h2>救救-应聘up主的简历👀</h2></center>

<h3 id="个人信息-无图🙋🏻‍♀️"><a href="#个人信息-无图🙋🏻‍♀️" class="headerlink" title="个人信息-无图🙋🏻‍♀️"></a>个人信息-无图🙋🏻‍♀️</h3><p>🌼姓 名：救救                                    🪐籍 贯：火星</p>
<p>👩🏻‍🦰性 别：女                                        🔥年 龄：24（也可改成工龄）</p>
<p>📞手 机：40088088201                  📩邮 箱：<a href="mailto:youremail@xx.com">youremail@xx.com</a> </p>
<h3 id="个人信息-有图（可以放二维码、个人靓照）🙋🏻‍♀️"><a href="#个人信息-有图（可以放二维码、个人靓照）🙋🏻‍♀️" class="headerlink" title="个人信息-有图（可以放二维码、个人靓照）🙋🏻‍♀️"></a>个人信息-有图（可以放二维码、个人靓照）🙋🏻‍♀️</h3><div style="height: 200px;">
    <table style="float: left;height:100%;width:60%;">
        <tbody><tr>
            <td>🌼姓 名：救救</td>
            <td>🪐籍 贯：广西</td>
        </tr>
        <tr>
            <td>👩🏻‍🦰性 别：女</td>
            <td>🔥年 龄：24</td>
        </tr>
        <tr>
            <td>📞手 机：40088088201</td>
            <td>📩邮 箱：youremail@xx.com </td>
        </tr>
    </tbody></table>
    <img src="/2021/03/18/resume-tutorial/bilibili-qrcode.PNG" style="float:left;height:80%;width:20%;margin: 2% 2% 2% 15%;">
</div>




<hr>
<p>修改表格样式</p>
<ol>
<li>偏好设置➡️外观➡️打开主题文件夹</li>
<li>找到对应主题的以css结尾的文件(eg. vue.css)，同目录下复制一份（防止改坏）</li>
<li>打开对应主题的以css结尾的文件</li>
<li>不要边框线：搜索<code>table</code> 找<code>solid</code>   注释掉</li>
<li>不要条纹：搜索<code>thead</code> 改成<code>#ffffff</code></li>
</ol>
<hr>
<h3 id="教育背景🎓"><a href="#教育背景🎓" class="headerlink" title="教育背景🎓"></a>教育背景🎓</h3><div style="height: 60px;">
    <img src="/2021/03/18/resume-tutorial/bilibili-icon.png" style="height:100%;width:75px; float:left;">
      <br>
    <span>Bilibili大学全日制本科，GPA ?.?/4.0，专业前?0%，英语CET-?，每年都获奖学金💰</span>
</div>


<hr>
<p>左边可以放校徽，一句话描述下大学生涯（用==数字==说话)，如果话太长了位置什么的就要自己调下</p>
<hr>
<hr>
<p>描述较长的话建议用列表==分点写==</p>
<hr>
<h3 id="专业技能（个人特长）👩🏻‍💻"><a href="#专业技能（个人特长）👩🏻‍💻" class="headerlink" title="专业技能（个人特长）👩🏻‍💻"></a>专业技能（个人特长）👩🏻‍💻</h3><ul>
<li>💻扎实的==上网冲浪基础==，熟练运用==各种App==。如:<code>随时随机发现新孩子的某微</code>、<code>谢邀人在美国刚下飞机的某乎</code></li>
<li>拥有超快的网速，计算机网络通信原理、网络协议可以跨越山海</li>
<li>了解<code>手撕</code>文化。如：<code>手撕鸡</code>、<code>手撕鸭</code>、<code>手撕绿茶</code>、<code>手撕代码</code></li>
<li>==看视频必三连==👍🪙🌟（<del>这么明显了，懂我意思了🐎？</del>）</li>
<li>区分<code>了解</code>，<code>熟悉</code>，<code>精通</code></li>
</ul>
<hr>
<p>着重写==突出==的地方，分点有条理，善用加粗、斜体、高亮等去强调关键词</p>
<hr>
<h3 id="个人爱好🙈"><a href="#个人爱好🙈" class="headerlink" title="个人爱好🙈"></a>个人爱好🙈</h3><ul>
<li><input checked="" disabled="" type="checkbox"> B站📺不知名的拖更up主</li>
<li><input checked="" disabled="" type="checkbox"> 💃👯‍♂️🍉🍗🧇🥘🍔🥭🍰🍦🏃‍♀️💨</li>
<li><input checked="" disabled="" type="checkbox"> 你的任务 </li>
</ul>
<hr>
<p>可以不写，看应聘公司的文化，写点==积极向上==的(<del>这里加任务列表只是以前的视频没讲任务列表咋用，这里补上，而且也好看的，也可以改样式</del>)</p>
<hr>
<h3 id="工作经历👷🏻‍♀️"><a href="#工作经历👷🏻‍♀️" class="headerlink" title="工作经历👷🏻‍♀️"></a>工作经历👷🏻‍♀️</h3><h4 id="2018-06-2019-06-公司-学校-部门-职位"><a href="#2018-06-2019-06-公司-学校-部门-职位" class="headerlink" title="2018.06- 2019.06 - 公司/学校  - 部门 - 职位"></a><em><strong>2018.06- 2019.06</strong></em> - <strong>公司/学校</strong>  - 部门 - 职位</h4><blockquote>
<p>一句话描述下这个公司</p>
</blockquote>
<h5 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h5><ul>
<li><p>项目的环境是什么？这个项目是干什么的？我在这个项目里有什么用？那些问题是我解决的？</p>
</li>
<li><p>可以放些项目的成果图</p>
</li>
</ul>
<hr>
<p>举个例子</p>
<hr>
<h4 id="2019-09-至今-Bilibili公司-教程部门-视频工作者"><a href="#2019-09-至今-Bilibili公司-教程部门-视频工作者" class="headerlink" title="2019.09- 至今 - Bilibili公司  - 教程部门 - 视频工作者"></a><em><strong>2019.09- 至今</strong></em> - Bilibili公司  - 教程部门 - 视频工作者</h4><blockquote>
<p><strong>B站</strong>，是<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86">中国大陆</a><a href="https://zh.wikipedia.org/wiki/%E8%A7%86%E9%A2%91%E5%BC%B9%E5%B9%95%E7%BD%91%E7%AB%99">弹幕视频分享网站</a>,至2020年3月31日，B站月均活跃用户达1.72亿</p>
</blockquote>
<h5 id="markdown教程项目"><a href="#markdown教程项目" class="headerlink" title="markdown教程项目"></a>markdown教程项目</h5><ul>
<li>这是一个教会小伙伴们如何使用markdown的视频</li>
<li>项目截图</li>
</ul>
<hr>
<p>==单张横图==</p>
<hr>
<div style="height: 320px;">
        <img src="/2021/03/18/resume-tutorial/peace-and-love.PNG" style="float:left;height:100%;width:100%;">
</div>



<hr>
<p>==左右布局==</p>
<hr>
<div style="height: 420px;">
        <img src="/2021/03/18/resume-tutorial/hi-worker.PNG" style="float:left;height:100%;width:45%;margin: auto 1%">
        <img src="/2021/03/18/resume-tutorial/worker-road.PNG" style="float:left;height:100%;width:45%;margin: auto 1%">
</div>


<hr>
<p>==左中右布局-有字==</p>
<hr>
<div style="height: 320px;">
        <img src="/2021/03/18/resume-tutorial/worker-enter.jpg" style="float:left;height:100%;width:30%;margin auto 1%">
        <div style="float:left;height:100%;width:30%;margin: auto 1%">  来点字？其实我觉得这里不要字比较好</div>
        <img src="/2021/03/18/resume-tutorial/worker-issue.jpg" style="float:left;height:100%;width:30%;margin: auto 1%">
</div>

<hr>
<p>==左中右布局==</p>
<hr>
<div style="height: 360px;">
    <img src="/2021/03/18/resume-tutorial/worker-princess.jpg" style="height: 100%;width: 30%;margin: auto 1%;">
    <img src="/2021/03/18/resume-tutorial/worker-love.jpg" style="height: 100%;width: 30%;margin: auto 1%;">
    <img src="/2021/03/18/resume-tutorial/worker-save-life.jpg" style="height:100%;width: 30%;margin: auto 1%;">
</div>



<h4 id="导出pdf控制分页"><a href="#导出pdf控制分页" class="headerlink" title="导出pdf控制分页"></a>导出pdf控制分页</h4><p>在想分页的地方插入</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">page-break-after</span><span class="token punctuation">:</span> always<span class="token punctuation">;</span> <span class="token property">break-after</span><span class="token punctuation">:</span> page<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

]]></content>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>✨登场</title>
    <url>/2021/03/05/%E2%9C%A8%E7%99%BB%E5%9C%BA/</url>
    <content><![CDATA[<h1 id="第一篇博客👀"><a href="#第一篇博客👀" class="headerlink" title="第一篇博客👀"></a>第一篇博客👀</h1><p>美化博客真的是太费时费力了 希望以后都不用再管了😭</p>
]]></content>
      <tags>
        <tag>study</tag>
        <tag>life</tag>
      </tags>
  </entry>
</search>
